#!/bin/sh

usage () {
	if test $# -gt 0
	then
		printf '%s\n' "$*" >&2
	fi
	cat >&2 <<"EOF"
	Usage: contask -T
	       contask -A [taskrc]
	       contask -c <context> [tags...]
	       contask -r <context> [taskrc]
	       contask -l <context>
	       task-<context> [task-args...]
EOF
	exit 1
}

CONTASK="$(command -v contask)"
if test -z "$CONTASK"
then
	usage "Cannot find 'contask' in PATH"
fi

taskrc_includes () {
	for rc in "$@"
	do
		test -r "$rc" && \
			sed -n 's/^include[ 	][ 	]*\(..*\)/\1/p' "$rc" |\
			sed 's,^~/,'"$HOME"'/,'
	done
}

get_taskrc () {
	rclist="${TASKRC:-"$HOME/.taskrc"}"
	if test ! -r "$rclist"
	then
		usage Cannot find appropriate taskrc
	fi
	{
	while ! grep -le '^context\.[^.]\+\.read=' $rclist
	do
		rclist="$(taskrc_includes "$rclist")"
		if test -z "$rclist"
		then
			usage Cannot find appropriate taskrc
		fi
	done
	} | head -1
}

linkname () {
	printf '%s/.local/bin/task-%s' "$HOME" "$1"
}

contasklink () {
	symlink="$HOME/.local/bin/task-$1"
	if "$REMOVECONTEXT"
	then
		if test -L "$symlink"
		then
			echo "Removing task-$context"
			rm -f "$symlink"
		fi
	else
		if test ! -L "$symlink"
		then
			echo "Linking task-$context"
			ln -sf "$CONTASK" "$symlink"
		fi
	fi
}

createcontext () {
	if test $# -lt 1
	then
		set -- "$(printf '%s' "$context" | awk '{
			first = toupper(substr($0, 1, 1));
			rest = substr($0, 2);
			printf("%s%s", first, rest);
		}')"
	fi
	for tag in "$@"
	do
		if expr "$tag" : '[-+].*' >/dev/null
		then
			set -- "$@" "$tag"
		else
			set -- "$@" "+$tag"
		fi
		shift
	done
	task rc.verbose=0 rc.confirmation=false context define "$context" "$@"
}

removecontext () {
	task rc.verbose=0 rc.confirmation=false context delete "$context"
}

exe="$(basename "$0")"
if test "$exe" = "contask"
then
	CREATECONTEXT=false
	REMOVECONTEXT=false
	case x"$1" in
		x-T) get_taskrc; exit 0 ;;
		x-A) test $# -le 2 || usage
			TASKRC="${2:-"$(get_taskrc)"}"
			test -r "$TASKRC" || usage "Cannot find appropriate taskrc"
			set -- $(awk -F '[.]' '
				$1 == "context" &&
					$3 ~ /^(read|write)=.*$/ &&
					seen[$2] == 0 {
						seen[$2] = 1
						print $2
					}' "$TASKRC")
			if test $# -eq 0
			then
				usage No contexts found
			fi
			for context in "$@"
			do
				if test ! -L "$(linkname "$context")"
				then
					set -- "$@" "$context"
				fi
				shift
			done
			if test $# -eq 0
			then
				echo "All contexts are already linked"
				exit 0
			fi
			;;
		x-r) test $# -ge 2 -a $# -le 3 || usage
			context="$2"
			TASKRC="${3:-"$(get_taskrc)"}"
			shift
			shift
			test -r "$TASKRC" || usage "Cannot find taskrc"
			export TASKRC
			REMOVECONTEXT=true
			;;
		x-c) test $# -ge 2 || usage
			CREATECONTEXT=true
			context="$2"
			shift
			shift
			;;
		x-l) test $# -eq 2 || usage
			shift
			;;
		*) usage ;;
	esac
	if $CREATECONTEXT
	then
		createcontext "$@"
		set -- "$context"
	elif $REMOVECONTEXT
	then
		removecontext "$@"
		set -- "$context"
	fi
	for context in "$@"
	do
		contasklink "$context"
	done
	exit 0
fi

context="$(printf '%s' "$exe" | sed -n 's/^task-\(.*\)$/\1/p')"
if test -z "$context"
then
	usage
else
	exec task "rc.context=$context" "$@"
fi
