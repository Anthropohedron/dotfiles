#!/bin/sh

usage () {
	echo "Usage: $0 <base filename> <common name> [alt.domain|192.168.x.x]..." >&2
	exit 1
}

if test $# -lt 2
then
	usage
fi

KEYFILE="$1".key.unsecure
PUBFILE="$1".pub
CSRFILE="$1".csr
CN="$2"
shift
shift
shift

if test $# -gt 0
then
	altNames=""
	for d in "$@"
	do
		if test "$d" != "$(echo "$d" | tr -d -c '[0-9a-zA-Z.-]')"
		then
			echo "Invalid subject alt name: '$d'" >&2
			exit 1
		fi
		altd=$(echo "$d" | awk -F '[.]' '
		/^(([12][0-9][0-9]|[1-9]?[0-9])\.){3}([12][0-9][0-9]|[1-9]?[0-9])$/ {
				printf("IP:%s", $0); exit 0
			}
			{
				if (length($0) > 67) {
					print "@@@";
					exit 1
				}
				for (i=1;i<=NF;++i) {
					if ($1 ~ /--|^-|-$|^$/) {
						print "@@@";
						exit 1
					}
				}
				printf("DNS:%s", $0); exit 0
			}
		')
		if test "$altd" = "@@@"
		then
			echo "Invalid subject alt name: '$d'" >&2
			exit 1
		fi
		altNames="$altNames","$altd"
	done
	set -- -addext 'certificatePolicies=1.2.3.4' \
		-addext $(echo "$altNames" | sed 's/^,/subjectAltName=/')
fi

set -x

openssl req -new -subj "/C=US/CN=$CN" -newkey rsa:2048 -nodes \
	"$@" \
	-keyout "$KEYFILE" -out "$CSRFILE" && \
openssl pkey -pubout -in "$KEYFILE" -out "$PUBFILE"

